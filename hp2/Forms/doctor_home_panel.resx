<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>